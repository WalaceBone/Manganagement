openapi: "3.0.1"
info:
  version: "1"
  title: "Music Library documentation"


servers:
  - url: "https://{api_id}.execute-api.eu-west-3.amazonaws.com/live"
    variables:
      api_id:
        default: api_id
        description: set api id

paths:
  /authors:
    get:
      summary: "Find author by Manga"
  /songs:
    get:
      summary: "Find song by author and title"
      parameters:
        - in: query
          name: author
          required: true
          schema:
            type: string
        - in: query
          name: title
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Song"
      security:
        - sigv4: [ ]
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FindSongsFunction.Arn}/invocations"
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
    post:
      summary: "Create a song"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Song"
      responses:
        201:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Song"
      security:
        - sigv4: [ ]
      x-amazon-apigateway-request-validator: validate_request
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 201
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CreateSongFunction.Arn}/invocations"
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
  /songs/{song_id}:
    delete:
      summary: "Delete a song"
      parameters:
        - in: path
          name: song_id
          required: true
          schema:
            type: string
      responses:
        204:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
        - sigv4: [ ]
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 204
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DeleteSongFunction.Arn}/invocations"
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy

components:
  schemas:
    Mangaka:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        birth:
          type: string
        death:
          type: string
    Manga:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        release_date:
          type: string
    Character:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        manga:
          type: string
        role:
          type: string
        description: 
          type: sting
    SongList:
      type: array
      items:
        $ref: '#/components/schemas/Song'
    Song:
      type: object
      properties:
        id:
          type: string
        author:
          type: string
        title:
          type: string
        genre:
          type: string
        date:
          type: string
    Empty:
      type: object

securityDefinitions:
  sigv4:
    type: apiKey
    name: Authorization
    in: header
    x-amazon-apigateway-authtype: awsSigv4

  authorizer:
    type: apiKey
    name: Authorization
    in: header
    x-amazon-apigateway-authtype: 'custom'
    x-amazon-apigateway-authorizer:
      type: token
      authorizerUri: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${AuthorizerFunction}/invocations


x-amazon-apigateway-request-validators:
  validate_request:
    validateRequestBody: true
    validateRequestParameters: true
